{
  "workflow": {
    "unique_name": "definition_workflow_01YNPIDHND0DN2fME9gfBVbZwVsdIBVT57Z",
    "name": "GET ALL JUDGMENTS IN PRIVATE INTELL FILTERED BY SOURCE v2",
    "title": "GET ALL JUDGMENTS IN PRIVATE INTELL FILTERED BY SOURCE v2",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "https://private.intel.eu.amp.cisco.com",
          "scope": "local",
          "name": "Private Intell URL",
          "type": "datatype.string",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01YNPJT7B6Q4P7CnaelgKy9UTTI1VhS5Kox",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "output",
          "type": "datatype.string",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01YNPIDHYIVYU1d6uOoA4sQBKx3PyYIkQGe",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "check.torproject.org",
          "scope": "input",
          "name": "source",
          "type": "datatype.string",
          "description": "source to filter.  An Empty value means to not filter anything but output all the content of the Private Intelligence Judgment. \nDefaut value = check.torproject.org",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01YNPIDHYIM2P1vLLK1kmhAc8D9Qc48zRCv",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "delete_workflow_instance": false,
      "description": "Get all judgements values and Judgement IDs in the private intel from a specific source.\nPurposes :\n- Delete all Judgement from a specific source\n- Create a list of all judgments from a specific source",
      "display_name": "GET ALL JUDGMENTS IN PRIVATE INTELL FILTERED BY SOURCE v2",
      "runtime_user": {
        "override_target_runtime_user": false,
        "specify_on_workflow_start": false,
        "target_default": true
      },
      "target": {
        "execute_on_target_group": false,
        "execute_on_workflow_target": false,
        "no_target": true,
        "specify_on_workflow_start": false
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_01YOK3NGMGXDY6jeHE6L8LSPgfS15VgOX3u",
        "name": "CTRGenerateAccessToken_TEXT",
        "title": "CTRGenerateAccessToken_TEXT",
        "type": "workflow.atomic_workflow",
        "base_type": "subworkflow",
        "properties": {
          "continue_on_failure": false,
          "description": "We need this because we don't use SecureX Token. Actually we use a python script to interact with SecureX private Intell and we must pass the CTR token to it",
          "display_name": "CTRGenerateAccessToken_TEXT",
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "execute_on_this_target": true,
            "target_id": "definition_target_01GWHP3K1HYF727FePibjZyiXexsQXPbcji",
            "target_type": "web-service.endpoint"
          },
          "workflow_id": "definition_workflow_01YOD85MGAD8U5ekmZ5gQGNpG7628xbrmOD",
          "workflow_name": "CTRGenerateAccessToken_TEXT"
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01YNPIDKOV2KW2kHp9LkdU5R8cTnX0zMdVn",
        "name": "Execute Python Script",
        "title": "python HTTP get all selected judgements",
        "type": "python3.script",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "description": "Get all judgments from Private Intell for the the source given in input an create 2 lists, One with only IDs, and the other one with IDs and IP addresses\n",
          "display_name": "python HTTP get all selected judgements",
          "script": "import requests\nimport json\nimport sys\n\naccess_token = sys.argv[1]\nsource=sys.argv[2]\nhost = \"$workflow.definition_workflow_01YNPIDHND0DN2fME9gfBVbZwVsdIBVT57Z.local.variable_workflow_01YNPJT7B6Q4P7CnaelgKy9UTTI1VhS5Kox$\"\nitem_id_list=\"\"\nitem_id_list_with_ip=\"\"    \nurl0 = \"/ctia/judgement/search\"\noffset=0\nlimit=1000\ngo=1 \nwhile go:      \n    index=0\n    headers = {'Authorization':'Bearer {}'.format(access_token), 'Content-Type':'application/json', 'Accept':'application/json'}\n    url = f'{host}{url0}?limit={limit}&offset={offset}'\n    response = requests.get(url, headers=headers) \n    items=response.json()\n    for item in items:             \n        index+=1\n        ip=item['observable']['value']\n        if source:\n            if item['source']==source:\n                item_id_list_with_ip+=ip\n                item_id_list+=item['id']\n                item_id_list+='\\n'\n                item_id_list_with_ip+='$'+item['id']\n                item_id_list_with_ip+='\\n'\n        else:\n            print()\n            print(\"===========\")\n            print()\n            item_id_list_with_ip+=ip\n            item_id_list+=item['id']\n            item_id_list+='\\n'\n            item_id_list_with_ip+='$'+item['id']\n            item_id_list_with_ip+='\\n'\n    if index>=limit-1:\n        go=1\n        offset+=index-1\n    else:\n        go=0",
          "script_arguments": [
            "$global.variable_01K06RLF07HGZ6HH6LhXbqvjPXrKaMKhUTL.global.variable_01K06RLF07HGZ6HH6LhXbqvjPXrKaMKhUTL$",
            "$workflow.definition_workflow_01YNPIDHND0DN2fME9gfBVbZwVsdIBVT57Z.input.variable_workflow_01YNPIDHYIM2P1vLLK1kmhAc8D9Qc48zRCv$"
          ],
          "script_queries": [
            {
              "script_query": "item_id_list_with_ip",
              "script_query_name": "LISTE",
              "script_query_type": "string"
            },
            {
              "script_query": "item_id_list",
              "script_query_name": "ID_LIST",
              "script_query_type": "string"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01YPYS637VWRQ406WKGBW4c5Q16GFUciqZu",
        "name": "Parallel Block",
        "title": "Store and Output Results",
        "type": "logic.parallel",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "Parallel branch for creating 2 separate outputs",
          "display_name": "Store and Output Results",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01YPYS63JXKZS4JwIAAborLGWk4pITbfLGB",
            "name": "Parallel Branch",
            "title": "Parallel Branch",
            "type": "logic.parallel_block",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Parallel Branch",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01YNPIDLCASLA4YCXHnD62tqJKQNr48DhAb",
                "name": "Set Variables",
                "title": "Set Output - LISTE  IDs + IPs",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "description": "IDs + IPs . char $ used as separator",
                  "display_name": "Set Output - LISTE  IDs + IPs",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_01YNPIDHND0DN2fME9gfBVbZwVsdIBVT57Z.output.variable_workflow_01YNPIDHYIVYU1d6uOoA4sQBKx3PyYIkQGe$",
                      "variable_value_new": "$activity.definition_activity_01YNPIDKOV2KW2kHp9LkdU5R8cTnX0zMdVn.output.script_queries.LISTE$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_01YPYS63OX9P96CNlfpxWk5FDeyWA5dUTFY",
            "name": "Parallel Branch",
            "title": "Parallel Branch",
            "type": "logic.parallel_block",
            "base_type": "activity",
            "properties": {
              "display_name": "Parallel Branch"
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01YPYT38ZSB230haVUXoKYiiUvGI9JKIOpk",
                "name": "Set Variables",
                "title": "Set  global Variables Judgment IDs list ",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "description": "Update a global variable with all judgment IDs. Then this global variable can be used either to delete all these judgments or for any other purpose by antoher workflow",
                  "display_name": "Set  global Variables Judgment IDs list ",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$global.variable_01YPYUIKBA2K92y940dgCNsi1HsQgFSFiLD.global.variable_01YPYUIKBA2K92y940dgCNsi1HsQgFSFiLD$",
                      "variable_value_new": "$activity.definition_activity_01YNPIDKOV2KW2kHp9LkdU5R8cTnX0zMdVn.output.script_queries.ID_LIST$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      }
    ],
    "categories": [
      "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
    ]
  },
  "targets": {
    "definition_target_01GWHP3K1HYF727FePibjZyiXexsQXPbcji": {
      "unique_name": "definition_target_01GWHP3K1HYF727FePibjZyiXexsQXPbcji",
      "name": "CTR Target for access token",
      "title": "CTR Target for access token",
      "type": "web-service.endpoint",
      "base_type": "target",
      "object_type": "definition_target",
      "properties": {
        "default_runtime_user_id": "definition_runtime_user_01K05VVDQTXSV1xMWqpnPnidbN0OZG8lKYp",
        "description": "CTR_For_Access_Token",
        "disable_certificate_validation": false,
        "display_name": "CTR Target for access token",
        "host": "visibility.eu.amp.cisco.com",
        "no_runtime_user": false,
        "path": "/iroh",
        "protocol": "https"
      }
    }
  },
  "runtime_users": {
    "definition_runtime_user_01K05VVDQTXSV1xMWqpnPnidbN0OZG8lKYp": {
      "unique_name": "definition_runtime_user_01K05VVDQTXSV1xMWqpnPnidbN0OZG8lKYp",
      "name": "ADMIN_CTR_Credentials",
      "title": "ADMIN_CTR_Credentials",
      "type": "runtime_user.web-service_basic_credentials",
      "base_type": "runtime_user",
      "object_type": "definition_runtime_user",
      "properties": {
        "auth_option": "Basic",
        "basic_password": "*****",
        "basic_username": "client-xxxx",
        "display_name": "ADMIN_CTR_Credentials"
      }
    }
  },
  "variables": {
    "variable_01K06RLF07HGZ6HH6LhXbqvjPXrKaMKhUTL": {
      "unique_name": "variable_01K06RLF07HGZ6HH6LhXbqvjPXrKaMKhUTL",
      "properties": {
        "value": "",
        "scope": "global",
        "name": "CTR_TOKEN_IN_GLOBALS",
        "type": "datatype.string",
        "is_required": false,
        "is_invisible": false
      },
      "object_type": "variable"
    },
    "variable_01YPYUIKBA2K92y940dgCNsi1HsQgFSFiLD": {
      "unique_name": "variable_01YPYUIKBA2K92y940dgCNsi1HsQgFSFiLD",
      "properties": {
        "scope": "global",
        "name": "Judgment IDs to delete",
        "type": "datatype.string",
        "is_required": false,
        "is_invisible": false
      },
      "object_type": "variable"
    }
  },
  "atomic_workflows": [
    "definition_workflow_01YOD85MGAD8U5ekmZ5gQGNpG7628xbrmOD"
  ],
  "dependent_workflows": [
    "definition_workflow_01YOD85MGAD8U5ekmZ5gQGNpG7628xbrmOD"
  ]
}